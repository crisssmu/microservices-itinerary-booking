server:
  port: 8080

spring:
  application:
    name: ApiGateWay
  redis:
    host: localhost
    port: 6379
  cloud:
    gateway:
      routes:
        - id: itinerary-service
          uri: http://localhost:8081
          predicates:
            - Path=/api/public/itinerary/**
          filters:
            - RewritePath=/api/public/itinerary/(?<segment>.*),/api/itinerary/v1/${segment}
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                key-resolver: "#{@apiKeyResolver}"
            - name: CircuitBreaker
              args:
                name: itineraryCB
                fallbackUri: forward:/fallback/itinerary
        - id: booking-service
          uri: http://localhost:8084
          predicates:
            - Path=/api/public/booking/reservations/**
          filters:
            - RewritePath=/api/public/booking/reservations(?<segment>/?.*),/api/booking/v1/reservations${segment}
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                key-resolver: "#{@apiKeyResolver}"
            - name: CircuitBreaker
              args:
                name: bookingCB
                fallbackUri: forward:/fallback/booking
      filter:
        request-rate-limiter:
          enabled: true
          redis:
            enabled: true
            replenishRate: 5
            burstCapacity: 10
            requestedTokens: 1